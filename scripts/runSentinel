#!/bin/bash
echo Running runSentinel \(extra arguments are \'$@\'\)

# script that is called by the phpRootRunSentinel (from the www server) and crontabRunSentinel
# it cleans up svn, executes the Haskell sentinel and stores its output in SentinelOutput.txt and logs/

# has absolute paths instead of $HOME
# NOTE: make sure that www directory of SentinelOutput is writable for 'other'

HOME="/home/sentinel"
LANG=en_US.UTF-8
PATH=/home/sentinel/svn/Sentinel/scripts:/home/sentinel/.cabal/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games

export HOME
export LANG
export PATH

rm -rf /home/sentinel/svn/Ampersand/dist
rm -rf /home/sentinel/svn/Prototype/dist
cd /home/sentinel/svn/Ampersand
svn cleanup
cd /home/sentinel/svn/Prototype
svn cleanup

# get timestamp at the start of sentinel execution
Timestamp=`date +%Y-%m-%d_%H.%M.%S`

# Check for --deleteSandbox argument
deleteSandbox=0
for var in "$@"
do
  if [ $var == "--deleteSandbox" ]; then
    deleteSandbox=1
  fi
done

# Init sandboxes (and delete Ampersand sandbox, if necessary)

cd /home/sentinel/svn/Ampersand
echo $'Performing cabal update\n' > /home/sentinel/svn/Sentinel/www/ampersand/SentinelOutput.txt
#cabal update
# init is neutral if sandbox already exists
cabal sandbox init
if [ $deleteSandbox -ne 0 ]; then
echo $'Deleting Ampersand sandbox and reinstalling all dependencies. This may take a while. (check progress on <a href=\"http://sentinel.tarski.nl/logs/runSentinel.log.txt\">runSentinel.log.txt</a>)\n' >> /home/sentinel/svn/Sentinel/www/ampersand/SentinelOutput.txt
cabal sandbox delete
cabal sandbox init
cabal install --only-dependencies
fi
cd /home/sentinel/svn/Prototype
cabal sandbox init --sandbox=../Ampersand/.cabal-sandbox


# execute Sentinel with extra arguments passed to this script ($@)
/home/sentinel/.cabal/bin/sentinel --html $@ < /dev/null >> /home/sentinel/svn/Sentinel/www/ampersand/SentinelOutput.txt 2>&1

# Rather hacky way to extract some numbers from the test results (shows empty strings when tests did not finish properly)
# take the 5th field using space as separator
NrOfFailed=`grep "Number of failed tests:" /home/sentinel/svn/Sentinel/www/ampersand/SentinelOutput.txt | cut -d" " -f5`
# take the 5th field using space as separator
NrOfTests=`grep "Total number of tests:" /home/sentinel/svn/Sentinel/www/ampersand/SentinelOutput.txt | cut -d" " -f5`

# if NrOfFailed is empty then testing was aborted
if [ -z "$NrOfFailed" ]; then
Results=Aborted
else
Results=${NrOfFailed}_of_${NrOfTests}
fi

# get svn revision numbers for all components (after running sentinel, so svn updates are taken into account)
cd /home/sentinel/svn/Ampersand
AmpersandRevision=`svnversion | tr ":" "-"`
cd /home/sentinel/svn/Prototype
PrototypeRevision=`svnversion | tr ":" "-"`
cd /home/sentinel/svn/Sentinel
SentinelRevision=`svnversion | tr ":" "-"`

Filename=Sentinel_${Timestamp}__${Results}__Amp=${AmpersandRevision}_Pro=${PrototypeRevision}_Sen=${SentinelRevision}.html
# first '=' is assignment, the others are part of the filename

# put a </br> at the end of each line and store in logs directory
sed 's/$/<\/br>/' /home/sentinel/svn/Sentinel/www/ampersand/SentinelOutput.txt > /home/sentinel/svn/Sentinel/www/logs/$Filename
